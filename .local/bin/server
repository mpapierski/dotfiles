#!/usr/bin/python
from __future__ import print_function
import sys
import argparse
import socket

try:

    import SimpleHTTPServer as server
    import SocketServer as socketserver

except ImportError:

    # In Python 3 the 'SimpleHTTPServer'
    # module has been merged into 'http.server'.

    import http.server as server
    import socketserver


def main():
    parser = argparse.ArgumentParser(description='Serve local directory.')
    parser.add_argument(
        'port', type=int, help='listening port', nargs='?', default=8000)
    args = parser.parse_args()

    handler = server.SimpleHTTPRequestHandler
    map = handler.extensions_map

    # Set default Content-Type to 'text/plain'.
    map[""] = "text/plain"

    # Serve everything as UTF-8 (although not technically
    # correct, this doesn't break anything for binary files).
    for key, value in map.items():
        map[key] = value + "; charset=utf-8"

    # Create but don't automatically bind socket
    # (the 'allow_reuse_address' option needs to be set first).
    httpd = socketserver.ThreadingTCPServer(
        ("localhost", args.port), handler, False)

    # Prevent 'cannot bind to address' errors on restart.
    # https://brokenbad.com/address-reuse-in-pythons-socketserver/
    httpd.allow_reuse_address = True

    # Manually bind socket and start the server.
    try:
        httpd.server_bind()
    except socket.error as e:
        print('Unable to bind socket:', e, file=sys.stderr)
        return 1
    httpd.server_activate()
    print("Serving content on port:", args.port)
    try:
        httpd.serve_forever()
    except KeyboardInterrupt:
        return 0

if __name__ == '__main__':
    exit_code = main()
    sys.exit(exit_code)
